<?xml version="1.0" encoding="UTF-8" ?>
<!-- DOCTYPE이 sqlMap인 xml 파일은 처리할 SQL 명령을 기억하는 xml 파일이다. -->
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="com.tjoeun.vo.GuestbookVO">
	<!-- id: SQL 명령을 식별한다. -->
	<!-- parameterClass: SQL 명령으로 DAO 클래스에서 전달되는 데이터의 타입을 적는다. -->
	<!-- resultClass: SQL 명령문이 실행되고 DAO 클래스로 리턴되는 데이터의 타입을 적는다. -->
	
	<!-- 
		ibatis 자동 완성 
		https://ibatis.apache.org/dtd/에 접속해서 sql-map-2.dtd 파일을 다운받는다.
		이클립스 Window -> Preferences -> XML Catalog 검색 -> Add 버튼 -> File System 버튼 -> 다운로드 받은 sql-map-2.dtd 선택
		-> key에 -//iBATIS.com//DTD SQL Map 2.0//EN 입력 후, Apply and close
	-->
	
	<!-- 글 1건을 저장한다. -->
	<!-- SqlMapConfig에 typeAlias alias="vo"로 com.tjoeun.vo.GuestbookVO의 주소를 설정하여, parameterClass="vo"로 가능 -->
	<insert id="insert" parameterClass="vo">
		INSERT INTO guestbook(idx, name, password, memo, ip) VALUES (guestbook_idx_seq.nextval, #name#, #password#, #memo#, #ip#)
	</insert>
	
	<!-- 전체 글의 개수를 얻어온다. -->
	<select id="selectCount" resultClass="int">
		select count(*) from guestbook
	</select>
	
	<!-- 1페이지 분량의 글 목록을 얻어온다. -->
	<!-- SqlMapConfig에 typeAlias alias="vo"로 com.tjoeun.vo.GuestbookVO의 주소를 설정하여, resultClass="vo"로 가능 -->
	<select id="selectList" parameterClass="java.util.HashMap" resultClass="vo">
		<!-- mysql -->
		<!-- select * from guestbook order by idx desc limit #startNo#, #pageSize# -->
		
		<!-- ![CDATA[ ~ ]]> 사이에 입력한 내용은 무조건 문자열로 취급된다. => 35번줄 <=의 부등호가 태그로 인식되서 오류가 나기 때문 -->
		<![CDATA[
		select * from (
		    select rownum rnum, TT.* from (
		        select * from guestbook order by idx DESC
		    ) TT where rownum <= #endNo#
		) where rnum >= #startNo#
		]]>
	</select>
	
	<!-- 글 1건을 얻어온다. -->
	<select id="selectByIdx" parameterClass="int" resultClass="vo">
		select * from guestbook where idx = #idx#
	</select>
	
	<!-- 글 1건을 삭제한다. -->
	<delete id="delete" parameterClass="int">
		delete from guestbook where idx = #idx#
	</delete>
	
	<!-- 글 1건을 수정한다. -->
	<update id="update" parameterClass="vo">
		update guestbook set name = #name#, memo = #memo# WHERE idx = #idx#
	</update>
	
	<!-- memo 필드에 검색어가 포함된 글의 개수를 얻어온다. -->
	<select id="selectCountMemo" parameterClass="String" resultClass="int">
		select count (*) from guestbook where memo like '%'||#item#||'%'
		<!--
			데이터베이스별 ibatis 부분 일치(like) 쿼리 조건 작성방법
			oracle : like '%'||#검색어#||'%'
			mssql : like '%'+#검색어#+'%'
			mysql : like concat('%', #검색어#, '%')
		-->
	</select>

	<!-- memo 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListMemo" parameterClass="param" resultClass="vo">
         <![CDATA[
      select * from (
         select rownum rnum, AA.* from (
            select * from GUESTBOOK where MEMO like '%'||#item#||'%' order by IDX desc
        ) AA where rownum <= #endNo#
     ) where rnum >= #startNo#
      ]]>
	</select>
	
	<!-- name 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectCountName" parameterClass="String" resultClass="int">
		select count (*) from guestbook where name like '%'||#item#||'%'
	</select>
	
    <!-- name 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListName" parameterClass="param" resultClass="vo">
         <![CDATA[
      select * from (
         select rownum rnum, GG.* from (
            select * from GUESTBOOK where name like '%'||#item#||'%' order by IDX desc
        ) GG where rownum <= #endNo#
     ) where rnum >= #startNo#
      ]]>
	</select>
	
	<!-- memo 필드와 name 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectCountMemoName" parameterClass="String" resultClass="int">
		select count (*) from guestbook where memo like '%'||#item#||'%' or name like '%'||#item#||'%'
	</select>
	
	 <!-- memo 필드와 name 필드에 검색어가 포함된 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListMemoName" parameterClass="param" resultClass="vo">
         <![CDATA[
      select * from (
         select rownum rnum, KK.* from (
            select * from GUESTBOOK where memo like '%'||#item#||'%' or name like '%'||#item#||'%' order by IDX desc
        ) KK where rownum <= #endNo#
     ) where rnum >= #startNo#
      ]]>
	</select>
	
	<!-- 카테고리별 검색어를 포함하는 글의 개수를 얻어온다. => 동적 쿼리 사용 -->
	<select id="selectCountMulti" parameterClass="param" resultClass="int"> 
		<!-- 
			ibatis 동적 쿼리 - https://hellogk.tistory.com/100 참조
			<isEqual> 태그를 사용해 sql 명령의 실행 조건을 지장할 수 있다.
			property 속성에는 parameterClass로 넘어온 조건을 비교할 필드 이름을 적는다.
			compareValue 속성에는 property 속성에 지정한 필드의 저장된 내용과 비교할 값을 적는다.
		-->
		
		<!-- param 클래스의 catagory 필드에 "내용"이라고 저장되어 있으면 실행한다. -->
		<!-- 
			<isEqual property="category" compareValue="내용">
				select count (*) from guestbook where memo like '%'||#item#||'%'
			</isEqual> 
		-->
		
		<!-- param 클래스의 catagory 필드에 "이름"이라고 저장되어 있으면 실행한다. -->
		<!-- 
			<isEqual property="category" compareValue="내용">
				select count (*) from guestbook where name like '%'||#item#||'%'
			</isEqual> 
		-->
		
		<!-- param 클래스의 catagory 필드에 "내용+이름"이라고 저장되어 있으면 실행한다. -->
		<!-- 
			<isEqual property="category" compareValue="내용+이름">
				select count (*) from guestbook where memo like '%'||#item#||'%' or name like '%'||#item#||'%'
			</isEqual> 
		-->
		
		<!-- 변경되지 않는 sql 명령문은 따로 작업해두면 편리 -->
		select count (*) from guestbook where
		<isEqual property="category" compareValue="내용">
			memo like '%'||#item#||'%'
		</isEqual> 
		<isEqual property="category" compareValue="이름">
			name like '%'||#item#||'%'
		</isEqual> 
		<isEqual property="category" compareValue="내용+이름">
			memo like '%'||#item#||'%' or name like '%'||#item#||'%'
		</isEqual> 
	</select>
	
	<!-- 카테고리별 검색어를 포함하는 1페이지 분량의 글 목록을 얻어온다. -->
	<select id="selectListMulti" parameterClass="param" resultClass="vo">
      select * from (
         select rownum rnum, KK.* from (
            select * from GUESTBOOK where 
            
            <isEqual property="category" compareValue="내용">
				memo like '%'||#item#||'%' 
			</isEqual> 
			<isEqual property="category" compareValue="이름">
				name like '%'||#item#||'%' 
			</isEqual> 
			<isEqual property="category" compareValue="내용+이름">
				memo like '%'||#item#||'%' or name like '%'||#item#||'%' 
			</isEqual> 
            
            order by IDX desc
            
	<![CDATA[
        ) KK where rownum <= #endNo#
     ) where rnum >= #startNo#
      ]]>
	</select>
	
</sqlMap>















